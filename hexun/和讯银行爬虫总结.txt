1.在start_url里面设置爬取的多少
 start_urls = [f'http://bank.hexun.com/yhjrdd/index-{index}.html' for index in range(1, 903 + 1)]

2.可以不适用item
直接定义一个字典数据保存在这里然后在管道直接进行存储
 items = {
                'title': title,
                'timeResult': timeResult,
            }

            yield items

3.管道
    def __init__(self):
        self.f = open('scrapyrt-和讯理财.csv', 'a', encoding='utf-8', newline='')
        self.csvWriter = csv.writer(self.f)

    def process_item(self, item, spider):
        data = [
            item.get('title', ''),
            item.get('timeResult', ''),
        ]
        self.csvWriter.writerow(data)
        return item

    def close_spider(self, spider):
        self.f.close()

如果打开csv文件出现空行的情况，那么需要添加一个参数 newline=""

调用writer对象的前提是：需要传入一个文件对象，然后才能在这个文件对象的基础上调用csv的写入方法writerow（写入一行）
writerrow（写入多行）。写入数据的代码如下:

csv 存入字典
在写入字典序列类型数据的时候，需要传入两个参数，一个是文件对象――f，一个是字段名称――fieldnames，
到时候要写入表头的时候，只需要调用writerheader方法，
写入一行字典系列数据调用writerrow方法，并传入相应字典参数，写入多行调用writerows

3、csv文件的读
读取csv时需要使用reader，并传如一个文件对象，而且reader返回的是一个可迭代的对象，需要使用for循环遍历，代码如下：

import csv
with open('test.csv')as f:
    f_csv = csv.reader(f)
    for row in f_csv:
        print(row)
在上面，row是一个列表，如果想要查看固定的某列，则需要加上下标，例如我想要查看name，那么只需要改为row[1]